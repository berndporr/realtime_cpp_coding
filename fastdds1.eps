%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 23 171 831 421 
%%LanguageLevel: 3
%%Creator: CorelDRAW X6
%%Title: fastdds1.eps
%%CreationDate: Wed Feb 05 21:02:50 2025
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 3 def
%Build: CorelDRAW X6 Version 16.0.0.707
/EpsFile true def
%%BeginResource: procset wCorel16Dict 16.0 0
/wCorel16Dict 300 dict def wCorel16Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparation/LumSepsDict where
{pop false}{/AldusSepsDict where{pop false}{InRipSeparation{true}{1 0 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not}ifelse
}ifelse}ifelse def/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{
deviceinfo/Colors get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict
/processcolors known{statusdict/processcolors get exec 1 gt}{false}ifelse}{
false}ifelse}ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode
/OnHost ne InRipSeparation AdobeDistiller or and}bind}{false}ifelse def
/DocGrayScaleSpace[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace
[/DeviceCMYK]def/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[
0.9637 1.0000 0.8241]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116
div}bind{500 div}bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[
{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul
}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000
mul}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse
0.8241 mul}bind]>>]def/validate_cie_colorspace_whitepoint{load dup aload pop
/WhitePoint get 1 1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE
where{pop/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint
/DocGrayScaleSpace xd DocGrayScaleSpace aload pop begin pop/DecodeA where{pop
DecodeA type/arraytype eq{DecodeA aload pop/DecodeA exch def}if}if end}if
/DocRgbSpaceCIE where{pop/DocRgbSpaceCIE validate_cie_colorspace_whitepoint
/DocRgbSpace xd}if/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE
validate_cie_colorspace_whitepoint/DocCmykSpace xd}if}bd/set_rendering_intent{
Level3{findcolorrendering{/ColorRendering findresource setcolorrendering}{dup
/DefaultColorRendering eq{pop}{/ColorRendering findresource setcolorrendering}
}ifelse}{pop}ifelse}bd/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5
array astore}def}ifelse/setcustomcolor where SeparationMode/OnHost ne and{pop}
{/tint_cmyk_color{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}
ifelse}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll
pop pop pop 1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch
aload pop SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{
CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd
}ifelse/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}
repeat 3 copy min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd
/safe_setcolorspace{dup currentcolorspace eq{pop}{setcolorspace}ifelse}bd
/safe_setoverprint{dup type/booleantype eq{dup currentoverprint ne{
setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse}bd/is_cmyk_channel_name{
/channel_name xd channel_name/Cyan eq channel_name/Magenta eq or channel_name
/Yellow eq or channel_name/Black eq or{true}{false}ifelse}bd
/is_rgb_channel_name{/channel_name xd channel_name/Red eq channel_name/Green eq
or channel_name/Blue eq or{true}{false}ifelse}bd/is_spot_channel_name{
/channel_name xd channel_name is_cmyk_channel_name channel_name
is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse}bd
/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSpace safe_setcolorspace color aload pop setcolor}bd/separate_set_color{
SeparationMode/OnHost eq{separate_color{/set_color dexec true}{pop
currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1 SetGry true}
ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{currentdict false
}bd/convert_to_cmyk{currentdict}bd currentdict end def/GrayscaleColorSpec
ColorSpec 9 dict copy begin/names{/Black}def/num 1 def/ColorModel/Grayscale def
/ColorSpace DocGrayScaleSpace def/separate_color{SeparationMode/OnHost eq{
SeparationPlateName/Black eq{SeparateInColor{convert_to_cmyk true}{currentdict
true}ifelse}{currentdict false}ifelse}{currentdict false}ifelse}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9 dict copy begin
/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk def/ColorSpace
DocCmykSpace def/separate_color{currentdict false SeparationPlateIndex 0 ge
SeparationPlateIndex 3 le and{color SeparationPlateIndex get dup 0 gt{3 1 roll
pop pop SeparateInColor{0 0 0 4 SeparationPlateIndex roll create_cmyk_color
true}{1 exch sub create_grayscale_color true}ifelse}{pop}ifelse}if}bd
/convert_to_cmyk{currentdict}bd currentdict end def/create_cmyk_color{
CmykColorSpec 9 dict copy begin 4 array astore/color exch def/ColorSpace
DocCmykSpace def currentdict end}bd/SpotColorSpec ColorSpec 9 dict copy begin
/num 1 def/ColorModel/Spot def/separate_color{currentdict false
SeparationPlateIndex 4 eq{names aload pop SeparationPlateName eq{pop pop color
aload pop dup 0 gt{SeparateInColor{pop convert_to_cmyk true}{1 exch sub
create_grayscale_color true}ifelse}if}if}if}bd/convert_to_cmyk{
/alternativeSpace ColorSpace 2 get def/tintTransformProc ColorSpace 3 get def
alternativeSpace DocCmykSpace eq{color aload pop tintTransformProc
create_cmyk_color}{alternativeSpace DocRgbSpace eq{color aload pop
tintTransformProc create_rgb_color/convert_to_cmyk dexec}{alternativeSpace
DocGrayScaleSpace eq{0 0 0 color aload pop 1 sub create_cmyk_color}if}ifelse}
ifelse}bd currentdict end def/create_spot_colorspace{load/alternativeSpace xd
/alternativeColor xd/name xd[/Separation name alternativeSpace[
alternativeColor alternativeSpace/spot_tint_transform_proc cvx]cvx]}bd
/create_spot_color{SpotColorSpec 9 dict copy begin dup type/arraytype ne{
create_spot_colorspace}if/ColorSpace xd/color exch 1 array astore def
ColorSpace 1 get 1 array astore/names xd currentdict end}bd/DevicenColorSpec
SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def/set_color{Level3{
ColorSpace safe_setcolorspace color aload pop setcolor}{ColorSpace 2 get
setcolorspace color aload pop ColorSpace 3 get exec setcolor}ifelse}bd
/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup names
exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex 0 ge
{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/separate_color{SeparateInColor{convert_to_cmyk true}{color
aload pop 1 exch sub create_grayscale_color true}ifelse}bd/convert_to_cmyk{
color aload pop dup dup dup create_cmyk_color}bd currentdict end def
/create_registration_color{RegistrationColorSpec 9 dict copy begin 1 array
astore/color xd currentdict end}bd/LabColorSpec ColorSpec 9 dict copy begin
/names{/L/a/b}def/num 3 def/ColorModel/Lab def/ColorSpace DocLabSpace def
/separate_color{convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{0 0 0 0
create_cmyk_color}bd currentdict end def/create_lab_color{LabColorSpec 9 dict
copy begin 3 array astore/color exch def/ColorSpace DocLabSpace def currentdict
end}bd/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd
}bd/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{
@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/setcmykcolor{create_cmyk_color/separate_set_color dexec
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Text support
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/gradient_fill ld @ftx}{
$fil 3 eq{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/output_shading_gradient ld @ftx}
{FillOverprint safe_setoverprint FillColor/separate_set_color dexec{show}{pop}
ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/@st
{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint
safe_setoverprint OutlineColor/separate_set_color dexec{{currentpoint 3 -1 roll
(0)dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat
stroke @gr @np stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr
@st}bd/@t@a{dup @gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}
def}bd/o{/t{pop}def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm
setmatrix/$ttm matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll
m $ttm concat ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd
/@l{}bd/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null
def/_bithibyte 0 def
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi string def DevicenImage{/readstrip{DataSource stripBuffer
readhexstring pop}bd}{/readstrip{DataSource stripBuffer readstring pop}bd
}ifelse/stripHeight $lly $ury sub stripRows mul $hei div def/stripOutBuffer
$wid stripRows mul numPlanes mul string def/strip_img_dict 8 dict def
strip_img_dict begin/ImageType 1 def/Width $wid def/Height stripRows def
/BitsPerComponent $bts def/Decode[numPlanes{0 1}repeat]def/ImageMatrix[$wid 0 0
stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]def/DataSource stripOutBuffer def
end}bd/separate_output_color_image{/plateContent false def $ncl 1 eq{
SeparationPlateName/Black eq{output_color_image/plateContent true def}if}{@np
/DataSource create_datasource def SeparateInColor{DocCmykSpace setcolorspace
/numPlanes 4 def}{DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse
/stripRows 65535 $wid $bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max
def numPlanes stripRows set_image_strip_parameters/maxStripIndex $hei stripRows
div ceiling cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury
stripHeight stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add
ceiling cvi def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex
stripRows mul sub set_image_strip_parameters/$t_lly $t_ury stripHeight add
ceiling cvi def}if readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex
xd stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage
{ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if $llx $lly
Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor/separate_set_color
dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}ifelse[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq{imagemask}{image}ifelse $SDF
{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}ifelse}bd
/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/$dat
$wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq $ncl 1 eq
or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl 3 eq{
dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def/@cc1
load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch string
def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load/@cc3 load
/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp @ss}if}bd
/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{currentfile $dat2
readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop}bd/@cc4{
currentfile $dat4 readhexstring pop}bd/$msimage false def/ImageCompression
/None def/MaskedImage false def/DevicenImage false def/output_color_image{@np
$ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse
setcolorspace/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $ngx
$llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def
/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}
repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource create_datasource def currentdict end image $SDF{$dsf $dsa $dsp
@ss}if}bd/simulate_devicen_image{@np $ngx/colorantNames ImageDevicenSpace 1 get
def/altColorSpace ImageDevicenSpace 2 get def/tintProc ImageDevicenSpace 3 get
def/DataSource create_datasource def/stripRows 65535 $wid $bts mul $ncl mul 8
div div floor cvi 1 max def 1 stripRows set_image_strip_parameters
/maxStripIndex $hei stripRows div ceiling cvi 1 sub def 0 1 maxStripIndex{
/stripIndex exch def/$t_ury $ury stripHeight stripIndex mul add ceiling cvi def
/$t_lly $t_ury stripHeight add ceiling cvi def stripIndex maxStripIndex eq{1
$hei maxStripIndex stripRows mul sub set_image_strip_parameters/$t_lly $t_ury
stripHeight add ceiling cvi def}if readstrip pop @gs $llx $t_lly Tl $urx $llx
sub $t_ury $t_lly sub scale 0 1 $ncl 1 sub{@gs/inkIndex exch def 0 1
stripOutBuffer length 1 sub{dup $ncl mul inkIndex add stripBuffer exch get
stripOutBuffer 3 1 roll put}for[/Separation colorantNames inkIndex get
altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll tintProc}]setcolorspace
inkIndex 0 gt{true setoverprint}if strip_img_dict image @gr}for @gr}for $SDF
{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx/colorantNames
ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2 get def/tintProc
ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{/numAltChannels 4 def
}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{/numAltChannels 1 def}
ifelse}ifelse/DataSource create_datasource def altColorSpace setcolorspace
/stripRows 65535 $wid $bts mul $ncl numAltChannels max mul 8 div div floor cvi
1 max def numAltChannels stripRows set_image_strip_parameters/maxStripIndex
$hei stripRows div ceiling cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def
/$t_ury $ury stripHeight stripIndex mul add ceiling cvi def/$t_lly $t_ury
stripHeight add ceiling cvi def stripIndex maxStripIndex eq{numAltChannels $hei
maxStripIndex stripRows mul sub set_image_strip_parameters/$t_lly $t_ury
stripHeight add ceiling cvi def}if readstrip pop @gs 0 1 $wid stripRows mul 1
sub{/pixelIndex xd stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}
forall tintProc exec numAltChannels array astore/pixelAltIndex pixelIndex
numAltChannels mul def/posColorant 0 def{stripOutBuffer pixelAltIndex
posColorant add 3 -1 roll 255 mul cvi put/posColorant posColorant 1 add def}
forall}for $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale strip_img_dict
image @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_native{@np
$ngx ImageDevicenSpace setcolorspace/scanline $wid $bts mul $ncl mul 8 div
ceiling cvi string def/readscanline{currentfile scanline readhexstring pop}
bind def $llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType
1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl
{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource{readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}
bd/output_devicen_image{Level3{output_devicen_image_native}{
get_simulate_devicen{simulate_devicen_image}{output_devicen_image_alt}ifelse}
ifelse}bd/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi string def 0 1 $hei 1 sub{pop currentfile
scanline readhexstring pop pop}for}ifelse}bd/disable_raster_output{deflevel 0
eq{@rs}if/output_image load/output_image_original exch def/output_image
/skip_image_body load def globaldict begin/bSkipDeviceNImage true def end
deflevel 0 eq{@sv}if}def/enable_raster_output{deflevel 0 eq{@rs}if
/bSkipDeviceNImage where{/bSkipDeviceNImage undef/output_image
/output_image_original load def}if deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel16Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%BeginResource: font ArialMT
%!FontType1-1.0: ArialMT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /ArialMT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 80 /P putdup 117 /u putdup 98 /b putdup 108 /l putdup 105 /i putdup 115 /s putdup 104 /h putdup 101 /e putdup 114 /r putdup 83 /S putdup 99 /c putdup 68 /D putdup 97 /a putdup 116 /t putdup 67 /C putdup 107 /k putdup 78 /N putdup 119 /w putdup 111 /o putdup 84 /T putdup 112 /p putdup 50 /two putdup 49 /one putdup 77 /M putdup 103 /g putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B19F3D6437C4F3CAE47DA380B549C72606894D557359FE153F15FFC9975819DDF16A65F4AC42C2B6287DF4C
60AD9B54C8B08ED14970B9AE7DFBB72B495797F119F8872CB26C716CF1C67D6C46B74018CB2740428BD160C06D9661DAAF71CCF16282C7FD7A2E20A3EC4509B8
C959CAC6255224DF24E409667F1E58D7A11E9C3D5542C664C21C2F169C2A66DB853118CDB26BCB107FA65F13CCEA39196540AB57583B4308586D52B381E2FA78
CAC798A886F346B85E31AC5BD96DADB2ADF6DA27BCCA1114E14FCAEF849207766AAB8CDB07DFF42918948E0D62334720112B2845B4B18A27E53555EBB074A2DC
FFA4E9195A6CA48675C140E96872CE26F27DCAFE2561F179B113045E174C4FA33754E55789198DB42B58B1C8EF8EE61361D8BC8EBDD8DB79AB1E14FE75BD376D
268B51F8708D6CB8CC63FE05A1D6F090E7EF76C89AC9218C6DCB8B24448EFE34848368926B59FF387AD847D949AD1FFAA7CE880FCC05A432587BA4FF5A2FB75F
927F03B3E91E59333F1F2F28F010092A696EAADA7B65733C282FA5930D41E71F03A83E923066BE10B3EEE0CCA315D476392B4A80FAD7D87770F5F2C3A84A17DC
AF6D7314387E0E70C335EFC351A8AA7106A6F559F1656266EF0DF1E2107360587DD0F0A4C81D9972904E13DAD0980DCA02A2B8B5D2B500A557B07CAED596C275
3A9D083ECCC316A7B367D2D56F43E222CA481B4A7DE649D66FF2EE93D427D8130205E2C102BDBE6992C53EC845B4D1AF6AE801AF73CCFE929ADD599FC2544075
9256D84D54DE9A2F5A5AB374535009C0EC80DA5562336EDBB845E9369FE12CD4923A0F91A6FD3F62125289A046F02B39F497EDEA8A0F67FECC4BA6E886E205CA
F4F0FD0AFE1C261BB99E576072F6A32C2D465771743AA1475F9A47F1B7A3FB8ADD2ED2A8FE9C2489A8C8C7E64C5182AF09CFB53526406252BA112F3DAE33FDB7
EE72476FB4AB3E9DA48CF0D1A3E83E4EE937D75613DD776286DE33E167BBCE4C6FC347EACC60B273D6355BF677FD3A1B975C7B728F998EA510DBB37A4E2C4ECA
BC696DAD1D1D8E989DAA3D6FE5E372364A69439FAD3FB1069B3C93D5004CCF255DBF37E15073BEC8CB140E898F6BA5EF5A1496966835A3F9C1F2C81A8C1BB227
F7B4DB2C89BFA6DF6A7B663757BB0A83B5E4E1DF6595EDEFBDFC60A7D4A576A373DA621FB4C5179537885A508D3FF95E242ECF5600292EB8D821E0BA80AC72F6
03EBF95C83ACB39298FC83AD88E965948C6A329F42BB4C76CC3A3FC4D9897D7058A24B3804AF69FF0C80833DC0ED6B3A1EEA77818394D9A624A388BA5C983459
F9CC8A75EBD4ACC7E41BB6F65D04CF164A223D49D1235AE37F85177A158FAC4B0F001895E866222E4B87DAB04EC00087DE08299892498544E427BA231CF6293E
5029C41F6DE8ABDB5B023B1B83914B3EEC57C817B991177F889C0F40D9496315AC9895FE98A1BEDBD01828A4779FEB419DC40DB0C99782A18BF8D56D70821416
676F5DC335AB830C61453A55753177BA5FDE158104E0115441C1CE93F9D5521E6676D457C84A04D08215215DA9038F36AA9C913AC0FA8AB69EF33E39D7475A78
3D9C20764829549957543CF501939A373B08AF3768FE8A900436614F81F03AAF2891BF752151EAC419B7F055481ED677FDC518B167870B4F07751A9B8206EE1A
D4F7BA143356BFA02940FD2C5AF05885CE494C3523749C7F13964C24CED0B1D5F8942C261D678F8E2F55EC73AAEA9531390434B84397F08E72CF921492D4B42E
6A2BE614C7D95A1F61231CD978C9B92F0CA5B09990B400E61D4FAF2452122973922E99682D5450E1DE60376C90DA7AB0E3F12EF86C86EA5793935F8D8BF9B443
7BE380781E24D2FBD739C8078F17797945A75360C020EBDF82652AA963ABCAA5C46B095FFFB3839724B161FB563AE96EC30B2E20BB803C68D71949F9CAABD098
70BEA51FC1C24D45F967CAC1B7E0626C3AD57C6C5805AF149B69AA60E9387470852ECCAAC304D1F9E097E9F9073974D2B4F20EB36FCC74C93CCA5E26C272E256
E6EC0F7C5D0D7E1847AFF2C007A46FE49CA5726AF0297CA928617EB1FB8285F29DDEA9736807ACD0D1681D8C75096043F67D3C6F65058AB493FCC1FECD679F57
8C3265A5DE83D75D6AE09A5E8CE1D3F60EE20A57EA41CFBDCFE6D19D434560EA1DDEDEC462FA75F7E55C81EC8CB6EFF4789299E46670246F5A7829F24D91FDFC
F90722642E99BAA3895AA877C4BB370011E329E00236E5AFE84AFC5A267B10273A62FBC8C24E422368183EFA811C131183A31F10DBC9F526EE0538671A27FA50
6D433CA3506C1ED180DD87AB1D5566D9C39B85C3C3A2A71924EDF0D8B976677A114D9B3F834F2953D3EAD47F2F7F651A44780689F08567F732AB89C5331B9714
945C54BB991B30AC3E6D3B6CEEBE071DC5C5912A0CB8D21B4823D8F0538410ED1C8297B78197A07CA3105D1BFFFF8734E3E6752591A86C22A23D618CB9503930
5F42CA3419FFD537C73280CD2EAB92F8B1DF88872DD2DD2F3E75B6BFD83FF033420E7758A9B36D1DAD7A0ED44EF8BE89C3E34ACE4E07BD3C31D3CBE194D6131B
D42B9CE37CA5EC414AE9F10215D4482176E3E1D47633CE381EDD3900A05520DE3802CBBFBD7B503B5F66708489177477ED7AAF49F42CD0427FCCBA755C44DE5B
A6574F95C993E2A18D3D7D931DFF5BBDE11102A9F4E02CB62FC70A21C36DAB38A2924E2C8AEC09EBB82032B2D55D0FFC4C7F2C0D384E0B622BB3D2E9E092D44D
C25568ADE6E9A6233A1194D86F93B5901F8CD41187EDCFA3AB3B477A0567AEF4AB3019F14BFA74D6112F54B7F581F765001654D1DE76E10C2CA8BE6B1A39713B
9E4651A1AA6F922DE467B14D2E5705F887B7FD8D24919BEFEE9C344D294F82F85126D4742D79942D535A31041966061549CC1C2A8D365431089711E5CE7F0A48
9F59B2A7789468D56CA0415519A5F8CB6A283D8AAFA268066D099612786D09265C67E61F769FFB9996E94968EBA49AD6DD1132C07D4E5BDB64F4C48DE611993A
8E2A3F74F10960A5E55D98E382BD98496826793DA968EC3300B171ADD6735497CFB2C6EB857D28252D7BA68B2255C938F119DBABE618E19DB6D40D041F27CE96
CD5CC979B4CA114DCA0C07E231D784E8CECB6BC6B07BE2D679A82C4EED9B26063F63509C9CBA6395337E7C3E627D1E7E260905353DE4732B4BAFCC681E617B55
E5488C83A57661D021A700C25C9FD73185EA8D007F2429872B3B14C147EBB95A9422C740CFC833AC2AC5AF4AB4360EC72F4EE00A268CCB4F21379FB7053688E9
53C081A1CFFEDD84D1C3DB260C5328A4512112C4DCA6D16D7498FA7BE97D535A936CE31DDF6B371C454837467B794FB3DEAAE72E9910EEE9B0948C25A3EB0F96
4C6B0F77B0417C30AE666479099BFFBA0D56886940B45EE9A7D94470F1365B7EAD055EA89D2147FB52F7E4F8FF5B313149670A532BAA28EBA6AA91E4A2C0AF6D
03908C3147CD2169EB24CBE733057D61BC849844420D2EB60C98FF9E7D5DC7B4917AF28FB160C2F618538A35800EBC3737093C0BA73836F4E397DCA8F41FAA85
287AFAF5FC086945F1397DB4FB8C65772D233D95325F24DD7D1AEFF35815040353369F500434A73B6439D8581FF2760537DAA675CC2EAB7605ACAE2E03809780
B38AE8E2445123E15859E6C99B00CA4E58AEA3055F5158E07A8CC2DDC732BD273743A576BD071858F00C813AC4D9E87FCD314F40B77681C3A1AE4AA081DDCC9E
EDFE6C84E90C160889DEAF3AAF895BE8ABAC3BFDEFBED7E72B62543801FFBC613E7CCDFB67C4EC3269295821239420A36FFB8EC5C8DD6E6D35780D9BF60953BE
B1AD98E728AFC1D818807D15DB7B6073A5E74A03772DFEBBDB2FC26C88976BE657BAA6456338FE02F0ED8768568C25669AAD062A9AA7190577CD66E8E880C6D9
0F8C45C000A9104DD183DA4D58B5419B98245CC4A12CF82CCC325B176569FCBB4D8E28EF59E6BEB369E15B3E304DF12939670282D756207E07D3BC348C6BD42B
AB2B8AD6A15A7C77C66316F13F28057A72203D60C892F4FF7020F6BFDD4596F44CEA0C472C834CD0874D000CE061C9F22F3663292DC24F92BDA43A94152976B0
E266402D8F2F102E78AF0F04428E25D3D6746608D1222A93CC24D45AFE0AC8A3C1F77AFECCE0730AD101E4DF137BFDBE1E0F51AC591E46472FB2CE0F1C46CE47
CB6F02DA0E515E6781753E5264151844289F4081BCB2EED2F24BF635F79EAA1262D1CAA326EC2D4FCE52C408B0F4700F73EAAFC8FB0260A5B0C1061BDB8C9CD0
BCE43A231909C9DF9439ADBC9FEED839CE2B99EB35F411B3F776BEFC0076627FEF552524E31104097BD805DE4D45552D42D540203165CCFBB6F529FE35DD46A6
3947BD76DB90DF158125FE7B6644AFC75B2FA5B1A29A8D118F97C242D553D3554249A4D9AA33822CF8EE5022BA231102B40FA17B190827579852565AFBC8558D
AC120E977BF7A70C47E06984ED4171D952C09DF3690ED8BE4DDC95F33AE098B9D964EC8C9E6D8A488DB7DEBA15376E81FF36C0F1324DDF84E57AE71E4D8B8479
2EE348BBCD67868419418A726A24478B09EE805C9E0D02AF480BE4DC2B5D1831B39626F51DC45894A5E09F5BE6F144DD77CC4E77D0447EF114D9A2DBA8615785
44EAD6741787DEC0B2BA82E3AF95D8A381E51560C5C7DE8168238157D75D76FAD57ED35B1E1A1FF13B92D8B97CE90392A663C167350E5FC6B8C2CBE13517524D
17E76A3A3E3E88359CCCC1DA1BAD89F9E7922EF5F77400F838663EE73A4D2F5C728F2EDD52EBB2109378781700849BBBA5AEE8CDCAB9973BDE1C94BBEAA0E730
4A266E756321B3321C52FE580A6E4D763433976DBB732B5E36A6B327DB787B3C2C14302ED99B88D6E438134FA651F87F694E92DAC8FECDBFD6EE1A4124042F92
86ACF41942ECE99549F4A98E2B1953D6C9C43F707F4A8FA7B0AFB28B4992546AC090BA5444AF51166A1DD2528DC03F40748567D30E392F5103DBFADDA593EACC
A88D3038D26D383FE3AAC944F6A617D700AFB971AF90E22EF93635DA6DFD673D9914754485E8D2E27F4E9C0C4E1E42177257490EADB320E44EA6143E9C4E274F
7EAAF49BAE7EE1811BD41357623E75959C6384
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 278 
278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 
556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 
667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 
778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 
556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 
556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 556 
750 222 556 333 1000 556 556 333 1000 667 333 1000 750 611 750 750 
222 222 333 333 350 556 1000 333 1000 500 333 944 750 500 667 278 
333 556 556 556 556 260 556 333 737 370 556 584 333 737 552 400 
549 333 333 333 576 537 278 333 333 365 556 834 834 834 611 667 
667 667 667 667 667 1000 722 667 667 667 667 278 278 278 278 722 
722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 
556 556 556 556 556 889 500 556 556 556 556 278 278 278 278 556 
556 556 556 556 556 556 549 611 556 556 556 556 500 556 500 ]
CorelDrawReencodeVect /_R284667-ArialMT /ArialMT Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 612 792
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
287.97024 178.85395 582.92844 374.20243 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0 0.56693 0.56693 0.00000 @w
403.37291 355.60715 m
391.45465 369.43200 368.07250 358.41827 358.32671 348.31757 c
348.54888 338.18343 278.88151 354.09572 298.08935 285.27024 c
304.86529 260.99150 267.43068 239.09754 304.88655 218.45225 c
344.54523 196.59288 320.15339 195.25918 375.98003 185.37931 c
423.07625 177.04460 468.73701 176.05814 515.83720 186.14778 c
541.68208 191.68441 532.34249 207.96350 542.08885 237.93080 c
551.04321 265.46202 628.09767 308.51178 544.05865 338.63839 c
492.46072 357.13531 487.04655 396.60661 428.31553 357.56476 c
423.63723 354.45487 406.10863 359.64227 403.37291 355.60715 C
@c
S

@rax 115.59855 379.93209 214.14302 397.38019 @E
[0.00028346 0.00000000 0.00000000 0.00028346 113.75064567 380.19600000] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (Publisher) @t
T
@rax 111.77206 173.59200 210.31654 191.04009 @E
[0.00028346 0.00000000 0.00000000 0.00028346 109.92415748 173.85590551] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (Publisher) @t
T
@rax 560.29720 359.37609 674.24570 377.13628 @E
[0.00028346 0.00000000 0.00000000 0.00028346 559.19310236 359.66409449] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (Subscriber) @t
T
@rax 590.37449 255.27940 704.32299 273.03959 @E
[0.00028346 0.00000000 0.00000000 0.00028346 589.27039370 255.56740157] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (Subscriber) @t
T
@rax 583.09710 176.97600 697.04561 194.73619 @E
[0.00028346 0.00000000 0.00000000 0.00028346 581.99300787 177.26400000] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (Subscriber) @t
T
@rax 734.99074 376.31254 825.73540 420.59679 @E
[0.00028346 0.00000000 0.00000000 0.00028346 733.79083465 403.41259843] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (Data) @t
T
@rax 734.99074 376.31254 825.73540 420.59679 @E
[0.00028346 0.00000000 0.00000000 0.00028346 733.79083465 403.41259843] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 -94587 (Callback) @t
T
@rax 736.39587 241.91235 827.14054 286.19660 @E
[0.00028346 0.00000000 0.00000000 0.00028346 735.19596850 269.01240945] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (Data) @t
T
@rax 736.39587 241.91235 827.14054 286.19660 @E
[0.00028346 0.00000000 0.00000000 0.00028346 735.19596850 269.01240945] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 -94587 (Callback) @t
T
@rax %Note: Object
70.36724 393.72066 106.07102 403.32076 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0 2.83465 2.83465 0.00000 @w
70.36724 403.32076 m
94.20746 396.91049 L
S
@j
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.83068 2.83068 0 @w
95.00230 404.35909 m
106.07102 393.72066 L
91.15965 390.06794 L
95.00230 404.35909 L
f
@J

@rax %Note: Object
70.83694 182.25609 97.67112 182.40180 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0 2.83465 2.83465 0.00000 @w
70.83694 182.40180 m
85.41836 182.32243 L
S
@j
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.82331 2.82331 0 @w
84.29499 189.70894 m
97.67112 182.25609 L
84.21477 174.94894 L
84.29499 189.70894 L
f
@J

@rax 739.26482 171.36652 830.00948 215.65077 @E
[0.00028346 0.00000000 0.00000000 0.00028346 738.06491339 198.46658268] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (Data) @t
T
@rax 739.26482 171.36652 830.00948 215.65077 @E
[0.00028346 0.00000000 0.00000000 0.00028346 738.06491339 198.46658268] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 -94587 (Callback) @t
T
@rax %Note: Object
676.86491 372.05461 716.46491 392.45443 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0 2.83465 2.83465 0.00000 @w
676.86491 372.05461 m
705.55493 386.83417 L
S
@j
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.82784 2.82784 0 @w
701.13373 392.87169 m
716.46491 392.45443 L
707.90400 379.72913 L
701.13373 392.87169 L
f
@J

@rax %Note: Object
706.67490 259.05940 726.47490 269.25931 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0 2.83465 2.83465 0.00000 @w
706.67490 259.05940 m
715.56491 263.63906 L
S
@j
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.82784 2.82784 0 @w
711.14372 269.67657 m
726.47490 269.25931 L
717.91398 256.53402 L
711.14372 269.67657 L
f
@J

@rax %Note: Object
698.83795 187.56624 732.30123 193.56633 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0 2.83465 2.83465 0.00000 @w
698.83795 187.56624 m
720.24066 191.40406 L
S
@j
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.82331 2.82331 0 @w
717.79294 198.46290 m
732.30123 193.56633 L
720.39798 183.93420 L
717.79294 198.46290 L
f
@J

@rax 370.69512 379.99219 456.79550 397.44028 @E
[0.00028346 0.00000000 0.00000000 0.00028346 368.87102362 380.25609449] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (Network) @t
T
@rax 240.33997 177.49162 309.78879 212.85751 @E
[0.00026780 0.00009293 -0.00009293 0.00026780 245.45219686 175.45368451] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (T) @t
42333 0 (o) @t
89422 0 (p) @t
136511 0 (ic) @t
197655 0 (2) @t
T
@rax 241.25896 342.35263 296.35682 398.35587 @E
[0.00020993 -0.00019047 0.00019047 0.00020993 236.65529285 386.00024315] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (T) @t
42333 0 (opic1) @t
T
@rax %Note: Object
227.45197 293.66589 569.04378 384.45420 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0 2.83465 2.83465 0.00000 @w
227.45197 384.45420 m
263.88454 360.01587 278.88520 318.46564 340.70145 300.60000 c
381.47783 288.81468 548.32450 285.12964 569.04378 347.63017 C
S
@j
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.82246 2.82246 0 @w
561.67455 348.84794 m
572.89805 359.25732 L
575.68082 344.20479 L
561.67455 348.84794 L
f
@J

@rax %Note: Object
223.65836 173.88510 569.04378 235.64324 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0 2.83465 2.83465 0.00000 @w
223.65836 176.09471 m
241.60847 166.80161 306.39940 188.58331 333.64205 208.64891 c
373.18819 237.77717 424.86888 242.67288 469.56557 226.51483 c
498.73408 215.96995 502.47128 214.18923 533.21443 206.08753 c
537.31616 205.00639 567.34809 195.26258 569.04378 193.79849 C
S
@j
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.82643 2.82643 0 @w
572.99074 200.15206 m
578.32838 185.78211 L
563.33395 188.96769 L
572.99074 200.15206 L
f
@J

@rax %Note: Object
518.22794 269.83389 579.25729 307.66025 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0 2.83465 2.83465 0.00000 @w
518.22794 307.66025 m
568.84054 276.29036 L
S
@j
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.82387 2.82387 0 @w
571.74009 283.17742 m
579.25729 269.83389 L
563.96268 270.62901 L
571.74009 283.17742 L
f
@J

@rax 23.56243 395.30239 65.48683 417.52658 @E
[0.00028346 0.00000000 0.00000000 0.00028346 21.76242520 400.34239370] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (Msg) @t
T
@rax 23.77786 172.47260 65.70227 194.69679 @E
[0.00028346 0.00000000 0.00000000 0.00028346 21.97785827 177.51259843] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R284667-ArialMT 84667.00000 z
0 0 (Msg) @t
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel16Dict 16.0 0
%%+ font ArialMT
%%EOF
